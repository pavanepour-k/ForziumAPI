[pytest]
# Pytest configuration for Forzium API test suite

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts =
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=forzium_engine
    --cov=forzium
    --cov=core
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    -ra
    --color=yes
    --code-highlight=yes

# Markers for test categorization
markers =
    unit: Unit tests for individual functions and classes
    integration: Integration tests for multiple components
    performance: Performance and benchmark tests
    slow: Tests that take a long time to run
    memory: Memory usage and leak detection tests
    cross_platform: Cross-platform compatibility tests
    rust_ffi: Tests specifically for Rust FFI interface
    python_bindings: Tests for Python wrapper bindings
    edge_case: Edge case and boundary value tests
    error_handling: Error condition and exception tests
    smoke: Quick smoke tests for basic functionality
    regression: Regression tests for previously fixed bugs
    benchmark: Benchmark tests for performance measurement

# Warnings
filterwarnings =
    error
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings (if pytest-timeout is installed)
timeout = 300
timeout_method = thread

# Coverage settings
[coverage:run]
source = forzium_engine,forzium,core
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */site-packages/*
    */venv/*
    */build/*
    */dist/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false

[coverage:html]
directory = htmlcov
